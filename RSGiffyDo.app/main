#!/bin/bash
TARGET="$HOME/Jagex/launcher"
TFILE="/splash6.gif"
RESULT=0

function bad_gif # Helper for telling the user that the file wasn't a .gif
{
  if [ $# -eq 0 ]; then
  /usr/bin/osascript <<-EOF
    tell application "System Events"
      activate
      display dialog "THAT WASN'T ACTUALLY A .gif FILE!\n\nTry again."\
      default button 1 buttons {"Sorry!"}

      if button returned of result is "Sorry!" then
        return
      end if
    end tell
EOF
fi
}

function celebrate # Helper for telling the user that we just finished
{
  if [ $# -eq 0 ]; then
  /usr/bin/osascript <<-EOF
    tell application "System Events"
      activate
      display dialog "We did it! You (should) have a new loading screen!"\
      default button 1 buttons {"Yay!"}

      if button returned of result is "Yay!" then
        return
      end if
    end tell
EOF
fi
}


#########################
## RUNTIME STARTS HERE ##
#########################

# User gave us no arguments whatsoever
if [ $# -eq 0 ]; then
RESULT=`/usr/bin/osascript <<-EOF
  tell application "System Events"
    activate
    display dialog "THAT IS NOT HOW THIS WORKS.\n\nPlease drag a *.gif file into this applet."\
    default button 1 buttons {"Oh, okay"}

    if button returned of result is "Oh, okay" then
      return 0
    end if
  end tell
EOF`

# Confirmation of destructive action
else
RESULT=`/usr/bin/osascript <<-EOF
  tell application "System Events"
    activate
    display dialog "You are about to replace the RuneScape NXT loading image.\
    \n\nAre you sure you want to do that?"\
    default button 2 buttons {"Go ahead!", "WAIT NO STOP!"}
    if button returned of result is "Go ahead!" then
      return 1
    else if button returned of result is "WAIT NO STOP!" then
      return 0
    end if
    end tell
EOF`
fi

# RESULT is used to determine whether we should run our main functionality.
# It is set in the above osascript calls. Hopefully it's still 0, or was set
# to 1.

UINPUT="$1" # Save the first argument as a variable
echo $UINPUT

if [ "$RESULT" -eq 0 ]; then # Aaaaaand it's still 0. Abort!
  echo "Cancel..."
  exit
else
  echo "Lazily going about file verification..."
  # Do you really think I'm going to check the actual binary data itself?
  if [ ${UINPUT: -4} == ".gif" ] || [ ${UINPUT: -4} == ".GIF" ]; then
    echo "Hopefully definitely a .gif file..."
    eval rm "$TARGET$TFILE" #"~/Jagex/launcher/splash6.gif"
    eval cp "\"$UINPUT\" \"$TARGET\"\"$TFILE\""
    celebrate #see top of file, notification of success
  else
    bad_gif #see top of file, wrong file extension error message
  fi
fi

echo "Done..."